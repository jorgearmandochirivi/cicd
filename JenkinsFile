pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker_cred') // Reemplaza con el ID de tus credenciales de Docker Hub en Jenkins
        DOCKER_IMAGE = "jorgechirivi/proyecto-diplomado" // Reemplaza con tu usuario e imagen de Docker Hub
        NODE_VERSION = '14' // Reemplaza con la versi√≥n de Node.js que necesitas
    }
    
    tools{
        nodejs "NodeJStest"
    }  

    stages {
        stage('Clonar repositorio') {
            steps {
                git branch: 'main', url: 'https://github.com/jorgearmandochirivi/cicd.git'
            }
        }
        
        

        stage('instalar dependencias') {
            steps {
                sh 'npm install'
            }
        }

        
        stage("Ejecutar Tests"){
            steps{
                sh 'npm run test'
            }
        }


        stage('Construir Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build("${env.DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId:'docker_cred', usernameVariable:'DOCKERHUB_USERNAME', passwordVariable:'DOCKERHUB_PASSWORD')]){
                    sh "echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin"
                    sh "docker push ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                    //sh "docker push ${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('Clean Up') {
            steps {
                sh 'docker rmi ${DOCKER_IMAGE}:${BUILD_NUMBER}'
                //sh 'docker rmi ${DOCKER_IMAGE}:latest'
            }
        }
    }
}